


ARM Macro Assembler    Page 1 


    1 00000000         ;******************** (C) COPYRIGHT 2018 IoTality ******
                       **************
    2 00000000         ;* File Name          : LED.s
    3 00000000         ;* Author             : Gopal
    4 00000000         ;* Date               : 07-Feb-2018
    5 00000000         ;* Description        : A simple code to blink LEDs on S
                       TM32F4 discovery board
    6 00000000         ;*                      - The functions are called from 
                       startup code
    7 00000000         ;*                      - Initialization carried out for
                        GPIO-D pins PD12 to PD15 (connected to LEDs)
    8 00000000         ;*                      - Blink interval delay implement
                       ed in software
    9 00000000         ;*******************************************************
                       ************************
   10 00000000         
   11 00000000                 GET              reg_stm32f407xx.inc
    1 00000000         
    2 00000000         ; ******* Register definitions *******
    3 00000000         
    4 00000000         ;As per STM32F407 datasheet and reference manual
    5 00000000         
    6 00000000 40023830 
                       RCC_AHB1ENR
                               EQU              0x40023830  ;Clock control for 
                                                            AHB1 peripherals (i
                                                            ncludes GPIO)
    7 00000000         
    8 00000000         ;GPIO-D control registers
    9 00000000 40020C00 
                       GPIOD_MODER
                               EQU              0x40020C00  ;set GPIO pin mode 
                                                            as Input/Output/Ana
                                                            log
   10 00000000 40020C04 
                       GPIOD_OTYPER
                               EQU              0x40020C04  ;Set GPIO pin type 
                                                            as push-pull or ope
                                                            n drain
   11 00000000 40020C08 
                       GPIOD_OSPEEDR
                               EQU              0x40020C08  ;Set GPIO pin switc
                                                            hing speed
   12 00000000 40020C0C 
                       GPIOD_PUPDR
                               EQU              0x40020C0C  ;Set GPIO pin pull-
                                                            up/pull-down
   13 00000000 40020C14 
                       GPIOD_ODR
                               EQU              0x40020C14  ;GPIO pin output da
                                                            ta
   14 00000000         
   15 00000000 40020C18 
                       GPIOD_BSRR
                               EQU              0x40020C18
   16 00000000         
   17 00000000 E000E010 
                       SYSTICK_CONTROLR
                               EQU              0xE000E010



ARM Macro Assembler    Page 2 


   18 00000000 E000E014 
                       SYSTICK_RELOADR
                               EQU              0xE000E014
   19 00000000         
   20 00000000         
   21 00000000         ; **************************
   22 00000000         
   23 00000000         
   24 00000000                 END
   12 00000000         
   13 00000000         ; Export functions so they can be called from other file
                       
   14 00000000         
   15 00000000                 EXPORT           SystemInit
   16 00000000                 EXPORT           __main
   17 00000000         
   18 00000000                 AREA             MYCODE, CODE, READONLY
   19 00000000         
   20 00000000         ; ******* Function SystemInit *******
   21 00000000         ; * Called from startup code
   22 00000000         ; * Calls - None
   23 00000000         ; * Enables GPIO clock 
   24 00000000         ; * Configures GPIO-D Pins 12 to 15 as:
   25 00000000         ; ** Output
   26 00000000         ; ** Push-pull (Default configuration)
   27 00000000         ; ** High speed
   28 00000000         ; ** Pull-up enabled
   29 00000000         ; **************************
   30 00000000         
   31 00000000         SystemInit
                               FUNCTION
   32 00000000         
   33 00000000         ; Enable GPIO clock
   34 00000000 4915            LDR              R1, =RCC_AHB1ENR ;Pseudo-load a
                                                            ddress in R1
   35 00000002 6808            LDR              R0, [R1]    ;Copy contents at a
                                                            ddress in R1 to R0
   36 00000004 F040 0008       ORR.W            R0, #0x08   ;Bitwise OR entire 
                                                            word in R0, result 
                                                            in R0
   37 00000008 6008            STR              R0, [R1]    ;Store R0 contents 
                                                            to address in R1
   38 0000000A         
   39 0000000A         ; Configuracion de SysTick
   40 0000000A 4914            LDR              R1, =SYSTICK_RELOADR ; En este 
                                                            registro se guarda 
                                                            cada cuanto se quie
                                                            re que systick lanc
                                                            e una excepcion
   41 0000000C 4A14            LDR              R2, =SYST_RELOAD_500MS
   42 0000000E 600A            STR              R2, [R1]
   43 00000010         
   44 00000010 4914            LDR              R1, =SYSTICK_CONTROLR
   45 00000012 6808            LDR              R0, [R1]
   46 00000014 F040 0007       ORR.W            R0, #ENABLE_SYSTICK
   47 00000018 6008            STR              R0, [R1]
   48 0000001A         
   49 0000001A         ; Inicializando semaforos
   50 0000001A F04F 0102       MOV              R1, #2      ; Verde



ARM Macro Assembler    Page 3 


   51 0000001E F04F 0200       MOV              R2, #0      ; Rojo
   52 00000022         
   53 00000022 F04F 5300       MOV              R3, #536870912 ; Direccion base
                                                            
   54 00000026         
   55 00000026         ; Vehiculares
   56 00000026 6019            STR              R1, [R3, #0]
   57 00000028 605A            STR              R2, [R3, #4]
   58 0000002A 6099            STR              R1, [R3, #8]
   59 0000002C 60DA            STR              R2, [R3, # 12]
   60 0000002E         
   61 0000002E         ; Peatonales
   62 0000002E 611A            STR              R2, [R3, #16]
   63 00000030 6159            STR              R1, [R3, #20]
   64 00000032 619A            STR              R2, [R3, #24]
   65 00000034 61D9            STR              R1, [R3, #28]
   66 00000036         
   67 00000036         
   68 00000036         ; Inicializando carros
   69 00000036         ; Se harán 4 filas de 8 carros(32 posiciones de memoria)
                        para demostrar el funcionamiento del sistema
   70 00000036 F103 031C       ADD              R3, R3, #28 ; Seguiremos escrib
                                                            iendo en #(53687091
                                                            2+48)
   71 0000003A F04F 0101       MOV              R1, #1      ; Representa que ha
                                                            y un carro
   72 0000003E         
   73 0000003E F04F 0201       MOV              R2, #1      ; i = 1
   74 00000042 F04F 0504       MOV              R5, #4
   75 00000046         Loops_Calle
   76 00000046 FB02 F405       MUL              R4, R2, R5  ; R4 = R2*R5
   77 0000004A 5119            STR              R1, [R3, R4] ; Guarda R1 en la 
                                                            posicion de memoria
                                                             (R3+R4)
   78 0000004C         
   79 0000004C F102 0201       ADD              R2, R2, #1  ; i += 1
   80 00000050 2A21            CMP              R2, #33     ; R2-8==0? Z=1 : Z=
                                                            0
   81 00000052 D1F8            BNE              Loops_Calle ; Si no es igual, s
                                                            alte a Loops_Calle,
                                                             si es igual, rompa
                                                             el ciclo
   82 00000054         
   83 00000054 4770            BX               LR          ;Return from functi
                                                            on
   84 00000056         
   85 00000056                 ENDFUNC
   86 00000056         
   87 00000056         
   88 00000056         ; ******* Function SystemInit *******
   89 00000056         ; * Called from startup code
   90 00000056         ; * Calls - None
   91 00000056         ; * Infinite loop, never returns
   92 00000056         
   93 00000056         ; * Turns on / off GPIO-D Pins 12 to 15
   94 00000056         ; * Implements blinking delay 
   95 00000056         ; ** A single loop of delay uses total 6 clock cycles
   96 00000056         ; ** One cycle each for CBZ and SUBS instructions
   97 00000056         ; ** 3 cycles for B instruction



ARM Macro Assembler    Page 4 


   98 00000056         ; ** B instruction takes 1+p cycles where p=pipeline ref
                       il cycles
   99 00000056         ; **************************
  100 00000056         
  101 00000056         __main  FUNCTION
  102 00000056         
  103 00000056         
  104 00000056 E7FE            B                .           ; Loop infinito
  105 00000058         
  106 00000058                 ENDFUNC
  107 00000058         
  108 00000058                 ALIGN            4
  109 00000058 00B71B03 
                       SYST_RELOAD_500MS
                               EQU              0x00B71B03  ; Cada segundo lanc
                                                            e una excepcion.
  110 00000058 00000007 
                       ENABLE_SYSTICK
                               EQU              0x07
  111 00000058         
  112 00000058                 END
              40023830 
              E000E014 
              00B71B03 
              E000E010 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\kev_s\AppData
\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.15.0\Drivers\CMSIS\Device\ST\STM32F4xx\In
clude -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="_
_UVISION_VERSION SETA 531" --predefine="STM32F407xx SETA 1" --list=.\listings\m
ain.lst ..\src\main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Loops_Calle 00000046

Symbol: Loops_Calle
   Definitions
      At line 75 in file ..\src\main.s
   Uses
      At line 81 in file ..\src\main.s
Comment: Loops_Calle used once
MYCODE 00000000

Symbol: MYCODE
   Definitions
      At line 18 in file ..\src\main.s
   Uses
      None
Comment: MYCODE unused
SystemInit 00000000

Symbol: SystemInit
   Definitions
      At line 31 in file ..\src\main.s
   Uses
      At line 15 in file ..\src\main.s
Comment: SystemInit used once
__main 00000056

Symbol: __main
   Definitions
      At line 101 in file ..\src\main.s
   Uses
      At line 16 in file ..\src\main.s
Comment: __main used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ENABLE_SYSTICK 00000007

Symbol: ENABLE_SYSTICK
   Definitions
      At line 110 in file ..\src\main.s
   Uses
      At line 46 in file ..\src\main.s
Comment: ENABLE_SYSTICK used once
GPIOD_BSRR 40020C18

Symbol: GPIOD_BSRR
   Definitions
      At line 15 in file ..\src\reg_stm32f407xx.inc
   Uses
      None
Comment: GPIOD_BSRR unused
GPIOD_MODER 40020C00

Symbol: GPIOD_MODER
   Definitions
      At line 9 in file ..\src\reg_stm32f407xx.inc
   Uses
      None
Comment: GPIOD_MODER unused
GPIOD_ODR 40020C14

Symbol: GPIOD_ODR
   Definitions
      At line 13 in file ..\src\reg_stm32f407xx.inc
   Uses
      None
Comment: GPIOD_ODR unused
GPIOD_OSPEEDR 40020C08

Symbol: GPIOD_OSPEEDR
   Definitions
      At line 11 in file ..\src\reg_stm32f407xx.inc
   Uses
      None
Comment: GPIOD_OSPEEDR unused
GPIOD_OTYPER 40020C04

Symbol: GPIOD_OTYPER
   Definitions
      At line 10 in file ..\src\reg_stm32f407xx.inc
   Uses
      None
Comment: GPIOD_OTYPER unused
GPIOD_PUPDR 40020C0C

Symbol: GPIOD_PUPDR
   Definitions
      At line 12 in file ..\src\reg_stm32f407xx.inc
   Uses
      None
Comment: GPIOD_PUPDR unused
RCC_AHB1ENR 40023830

Symbol: RCC_AHB1ENR



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 6 in file ..\src\reg_stm32f407xx.inc
   Uses
      At line 34 in file ..\src\main.s
Comment: RCC_AHB1ENR used once
SYSTICK_CONTROLR E000E010

Symbol: SYSTICK_CONTROLR
   Definitions
      At line 17 in file ..\src\reg_stm32f407xx.inc
   Uses
      At line 44 in file ..\src\main.s
Comment: SYSTICK_CONTROLR used once
SYSTICK_RELOADR E000E014

Symbol: SYSTICK_RELOADR
   Definitions
      At line 18 in file ..\src\reg_stm32f407xx.inc
   Uses
      At line 40 in file ..\src\main.s
Comment: SYSTICK_RELOADR used once
SYST_RELOAD_500MS 00B71B03

Symbol: SYST_RELOAD_500MS
   Definitions
      At line 109 in file ..\src\main.s
   Uses
      At line 41 in file ..\src\main.s
Comment: SYST_RELOAD_500MS used once
11 symbols
351 symbols in table
